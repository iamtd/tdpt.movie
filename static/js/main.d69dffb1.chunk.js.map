{"version":3,"sources":["components/button/Button.jsx","api/apiConfig.js","api/axiosClient.js","api/tmdbApi.js","components/modal/Modal.jsx","components/hero-slide/HeroSlide.jsx","components/movie-card/MovieCard.jsx","components/movie-list/MovieList.jsx","pages/Home.jsx","assets/footer-bg.jpg","components/page-header/PageHeader.jsx","components/movie-grid/MovieGrid.jsx","pages/Catalog.jsx","pages/detail/Detail.jsx","config/AppRoutes.jsx","components/footer/Footer.jsx","assets/tmovie.png","components/header/Header.jsx","App.js","index.js"],"names":["OutlineButton","className","onClick","children","Button","apiConfig","baseUrl","apiKey","originalImage","imgPath","w500Image","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","queryString","stringify","api_key","interceptors","request","use","a","config","response","data","error","category","movie","tv","movieType","latest","now_playing","popular","top_rated","up_coming","tvType","airing_today","on_the_air","tmdbApi","getMovieList","type","url","get","getTvList","getVideos","cate","id","search","detail","credits","similar","ModalContent","props","modalContentRef","useRef","ref","current","parentNode","classList","remove","onClose","Modal","useState","active","setActive","useEffect","HeroSlideItem","item","navigate","useNavigate","backgroundUrl","backdrop_path","poster_path","posterUrl","setModalActive","modal","document","querySelector","videos","results","length","trailerUrl","key","setAttribute","innerHTML","toggle","style","backgroundImage","title","overview","src","alt","TrailerModal","iframeRef","width","height","HeroSlide","SwiperCore","Autoplay","movieItems","setMovieItems","page","slice","console","log","getMovies","modules","spaceBetween","slidesPerView","grabCursor","map","index","isActive","MovieCard","link","bg","to","name","MovieList","items","setItems","getList","i","Home","PageHeader","MovieGrid","setPage","totalPage","setTotalPage","keyword","useParams","undefined","query","total_pages","loadMore","Catalog","Detail","setItem","video","setVideo","window","scrollTo","getDetail","getMovie","AppRoutes","path","element","Footer","headerNav","display","Header","pathname","useLocation","headerRef","shrinkHeader","body","scrollTop","documentElement","add","addEventListener","removeEventListener","findIndex","e","logo","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"8bAcaA,EAAgB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAClD,OACE,wBACEF,UAAS,0BAAqBA,GAC9BC,QAASA,EAAU,kBAAMA,KAAY,KAFvC,SAIGC,KASQC,EA1BA,SAAC,GAAsC,IAApCH,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACpC,OACE,wBACEF,UAAS,cAASA,GAClBC,QAASA,EAAU,kBAAMA,KAAY,KAFvC,SAIGC,K,+DCFQE,G,MAPG,CAChBC,QAAS,gCACTC,OAAQ,mCACRC,cAAe,SAACC,GAAD,oDAAoDA,IACnEC,UAAW,SAACD,GAAD,gDAAgDA,M,0CCCvDE,EAAcC,IAAMC,OAAO,CAC/BC,QAAST,EAAUC,QACnBS,QAAS,CAAE,eAAgB,oBAC3BC,iBAAkB,SAACC,GAAD,OAChBC,IAAYC,UAAZ,2BAA2BF,GAA3B,IAAmCG,QAASf,EAAUE,aAG1DI,EAAYU,aAAaC,QAAQC,IAAjC,+BAAAC,EAAA,MAAqC,WAAOC,GAAP,SAAAD,EAAA,+EAAkBC,GAAlB,2CAArC,uDAEAd,EAAYU,aAAaK,SAASH,KAChC,SAACG,GACC,OAAIA,GAAYA,EAASC,KAChBD,EAASC,KAEXD,KAET,SAACE,GACC,MAAMA,KAIKjB,QCxBFkB,EAAW,CACtBC,MAAO,QACPC,GAAI,MAGOC,EAAY,CACvBC,OAAQ,SACRC,YAAa,cACbC,QAAS,UACTC,UAAW,YACXC,UAAW,aAGAC,EAAS,CACpBL,OAAQ,SACRM,aAAc,eACdC,WAAY,aACZJ,UAAW,YACXC,UAAW,aAkCEI,EA/BC,CACdC,aAAc,SAACC,EAAM1B,GACnB,IAAM2B,EAAG,UAAMf,EAASC,MAAf,YAAwBE,EAAUW,IAC3C,OAAOhC,EAAYkC,IAAID,EAAK3B,IAE9B6B,UAAW,SAACH,EAAM1B,GAChB,IAAM2B,EAAG,UAAMf,EAASE,GAAf,YAAqBO,EAAOK,IACrC,OAAOhC,EAAYkC,IAAID,EAAK3B,IAE9B8B,UAAW,SAACC,EAAMC,GAChB,IAAML,EAAG,UAAMf,EAASmB,GAAf,YAAwBC,EAAxB,WACT,OAAOtC,EAAYkC,IAAID,EAAK,CAAE3B,OAAQ,MAExCiC,OAAQ,SAACF,EAAM/B,GACb,IAAM2B,EAAG,iBAAaf,EAASmB,IAC/B,OAAOrC,EAAYkC,IAAID,EAAK3B,IAE9BkC,OAAQ,SAACH,EAAMC,GACb,IAAML,EAAG,UAAMf,EAASmB,GAAf,YAAwBC,GACjC,OAAOtC,EAAYkC,IAAID,EAAK,CAAE3B,OAAQ,MAExCmC,QAAS,SAACJ,EAAMC,GACd,IAAML,EAAG,UAAMf,EAASmB,GAAf,YAAwBC,EAAxB,YACT,OAAOtC,EAAYkC,IAAID,EAAK,CAAE3B,OAAQ,MAExCoC,QAAS,SAACL,EAAMC,GACd,IAAML,EAAG,UAAMf,EAASmB,GAAf,YAAwBC,EAAxB,YACT,OAAOtC,EAAYkC,IAAID,EAAK,CAAE3B,OAAQ,OChC7BqC,G,MAAe,SAACC,GAC3B,IAAMC,EAAkBC,iBAAO,MAO/B,OACE,sBAAKC,IAAKF,EAAiBvD,UAAU,iBAArC,UACGsD,EAAMpD,SACP,qBAAKF,UAAU,eAAeC,QARf,WACjBsD,EAAgBG,QAAQC,WAAWC,UAAUC,OAAO,UAChDP,EAAMQ,SAASR,EAAMQ,WAMvB,SACE,mBAAG9D,UAAU,mBAWN+D,EArCD,SAACT,GAAW,IAAD,EACKU,oBAAS,GADd,mBAChBC,EADgB,KACRC,EADQ,KAOvB,OAJAC,qBAAU,WACRD,EAAUZ,EAAMW,UACf,CAACX,EAAMW,SAGR,qBAAKjB,GAAIM,EAAMN,GAAIhD,UAAS,gBAAWiE,EAAS,SAAW,IAA3D,SACGX,EAAMpD,YCgDPkE,EAAgB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMrE,EAAgB,EAAhBA,UACzBsE,EAAWC,cACTC,EAAgBpE,EAAUG,cAC9B8D,EAAKI,cAAgBJ,EAAKI,cAAgBJ,EAAKK,aAG3CC,EAAYvE,EAAUK,UAAU4D,EAAKK,aAErCE,EAAc,uCAAG,gCAAArD,EAAA,6DACfsD,EAAQC,SAASC,cAAT,iBAAiCV,EAAKrB,KAD/B,SAGAR,EAAQM,UAAUlB,EAASC,MAAOwC,EAAKrB,IAHvC,QAGfgC,EAHe,QAKVC,QAAQC,OAAS,GACpBC,EACJ,iCAAmCH,EAAOC,QAAQ,GAAGG,IACvDP,EACGE,cAAc,4BACdM,aAAa,MAAOF,IAEvBN,EAAME,cAAc,mBAAmBO,UAAY,aAGrDT,EAAMjB,UAAU2B,OAAO,UAfF,2CAAH,qDAkBpB,OACE,qBACEvF,UAAS,sBAAiBA,GAC1BwF,MAAO,CAAEC,gBAAgB,OAAD,OAASjB,EAAT,MAF1B,SAIE,sBAAKxE,UAAU,iBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BqE,EAAKqB,QACnC,qBAAK1F,UAAU,kBAAf,SAAkCqE,EAAKsB,WACvC,sBAAK3F,UAAU,iBAAf,UACE,cAAC,EAAD,CAAQC,QAAS,kBAAMqE,EAAS,UAAD,OAAWD,EAAKrB,MAA/C,uBAGA,cAAC,EAAD,CAAe/C,QAAS2E,EAAxB,iCAMJ,qBAAK5E,UAAU,gBAAf,SACE,qBAAK4F,IAAKjB,EAAWkB,IAAI,aAO7BC,EAAe,SAAC,GAAc,IAAZzB,EAAW,EAAXA,KAChB0B,EAAYvC,iBAAO,MAGzB,OACE,cAAC,EAAD,CAAOS,QAAQ,EAAOjB,GAAE,gBAAWqB,EAAKrB,IAAxC,SACE,cAAC,EAAD,CAAcc,QAHF,kBAAMiC,EAAUrC,QAAQ2B,aAAa,MAAO,KAGxD,SACE,wBACE5B,IAAKsC,EACLC,MAAM,OACNC,OAAO,QACPP,MAAM,iBAODQ,EAxHG,WAChBC,IAAW7E,IAAI,CAAC8E,MADM,MAGcpC,mBAAS,IAHvB,mBAGfqC,EAHe,KAGHC,EAHG,KAsBtB,OAjBAnC,qBAAU,YACO,uCAAG,gCAAA5C,EAAA,6DACVP,EAAS,CAAEuF,KAAM,GADP,kBAGS/D,EAAQC,aAAaV,EAAUG,QAAS,CAC7DlB,WAJY,OAGRS,EAHQ,OAMRC,EAAOD,EAASwD,QAAQuB,MAAM,EAAG,GAEvCF,EAAc5E,GARA,gDAUd+E,QAAQC,IAAR,MAVc,yDAAH,qDAafC,KACC,IAGD,sBAAK3G,UAAU,QAAf,UACE,cAAC,IAAD,CACE4G,QAAS,CAACR,KACVS,aAAc,EACdC,cAAe,EACfC,YAAY,EAJd,SAOGV,EAAWW,KAAI,SAAC3C,EAAM4C,GAAP,OACd,cAAC,IAAD,UACG,gBAAGC,EAAH,EAAGA,SAAH,OACC,cAAC,EAAD,CACE7C,KAAMA,EACNrE,UAAS,UAAKkH,EAAW,SAAW,QAJxBD,QAUrBZ,EAAWW,KAAI,SAAC3C,EAAM4C,GAAP,OACd,cAAC,EAAD,CAA0B5C,KAAMA,GAAb4C,UC3BZE,G,YAnBG,SAAC7D,GACjB,IAAMe,EAAOf,EAAMe,KAEb+C,EAAI,WAAOxF,EAAS0B,EAAM1B,UAAtB,YAAmCyC,EAAKrB,IAE5CqE,EAAKjH,EAAUK,UAAU4D,EAAKK,aAAeL,EAAKI,eAExD,OACE,eAAC,IAAD,CAAM6C,GAAIF,EAAV,UACE,qBAAKpH,UAAU,aAAawF,MAAO,CAAEC,gBAAgB,OAAD,OAAS4B,EAAT,MAApD,SACE,cAAC,EAAD,UACE,mBAAGrH,UAAU,mBAGjB,6BAAKqE,EAAKqB,OAASrB,EAAKkD,YCmCfC,EA/CG,SAAClE,GAAW,IAAD,EACDU,mBAAS,IADR,mBACpByD,EADoB,KACbC,EADa,KA6B3B,OA1BAvD,qBAAU,YACK,uCAAG,8BAAA5C,EAAA,yDACVE,EAAW,KACTT,EAAS,GAFD,SAKO,YAAfsC,EAAMZ,KALE,sBAMFY,EAAM1B,SANJ,cAOHA,EAASC,MAPN,kCAQWW,EAAQC,aAAaa,EAAMZ,KAAM,CAAE1B,WAR9C,cAQNS,EARM,qDAWWe,EAAQK,UAAUS,EAAMZ,KAAM,CAAE1B,WAX3C,QAWNS,EAXM,wDAcOe,EAAQY,QAAQE,EAAM1B,SAAU0B,EAAMN,IAd7C,QAcVvB,EAdU,eAgBZiG,EAASjG,EAASwD,SAClBwB,QAAQC,IAAIjF,EAASwD,SAjBT,kDAmBZwB,QAAQC,IAAR,MAnBY,0DAAH,qDAsBbiB,KACC,IAGD,qBAAK3H,UAAU,aAAf,SACE,cAAC,IAAD,CAAQ+G,YAAY,EAAMF,aAAc,GAAIC,cAAe,OAA3D,SACGW,EAAMT,KAAI,SAAC3C,EAAMuD,GAAP,OACT,cAAC,IAAD,UACE,cAAC,EAAD,CAAWvD,KAAMA,EAAMzC,SAAU0B,EAAM1B,YADvBgG,WCWbC,EAjDF,WACX,OACE,qCACE,cAAC,EAAD,IACA,sBAAK7H,UAAU,YAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,iDACA,cAAC,IAAD,CAAMsH,GAAG,SAAT,SACE,cAAC,EAAD,CAAetH,UAAU,QAAzB,4BAGJ,cAAC,EAAD,CAAW4B,SAAUA,EAASC,MAAOa,KAAMX,EAAUG,aAGvD,sBAAKlC,UAAU,eAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,kDACA,cAAC,IAAD,CAAMsH,GAAG,SAAT,SACE,cAAC,EAAD,CAAetH,UAAU,QAAzB,4BAGJ,cAAC,EAAD,CAAW4B,SAAUA,EAASC,MAAOa,KAAMX,EAAUI,eAGvD,sBAAKnC,UAAU,eAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,+CACA,cAAC,IAAD,CAAMsH,GAAG,SAAT,SACE,cAAC,EAAD,CAAetH,UAAU,QAAzB,4BAGJ,cAAC,EAAD,CAAW4B,SAAUA,EAASE,GAAIY,KAAML,EAAOE,gBAGjD,sBAAKvC,UAAU,eAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,8CACA,cAAC,IAAD,CAAMsH,GAAG,SAAT,SACE,cAAC,EAAD,CAAetH,UAAU,QAAzB,4BAGJ,cAAC,EAAD,CAAW4B,SAAUA,EAASE,GAAIY,KAAML,EAAOF,sBChD1C,G,MAAA,IAA0B,uCCY1B2F,EARI,SAACxE,GAClB,OACE,qBAAKtD,UAAU,cAAcwF,MAAO,CAAEC,gBAAgB,OAAD,OAAS4B,EAAT,MAArD,SACE,6BAAK/D,EAAMpD,c,QC4FF6H,G,MAzFG,SAACzE,GAAW,IAAD,EACDU,mBAAS,IADR,mBACpByD,EADoB,KACbC,EADa,OAEH1D,mBAAS,GAFN,mBAEpBuC,EAFoB,KAEdyB,EAFc,OAGOhE,mBAAS,GAHhB,mBAGpBiE,EAHoB,KAGTC,EAHS,KAKnBC,EAAYC,cAAZD,QACRhE,qBAAU,YACK,uCAAG,gCAAA5C,EAAA,kEAERE,EAAW,UAEC4G,IAAZF,EAJQ,iBAKJnH,EAAS,GALL,KAMFsC,EAAM1B,SANJ,cAOHA,EAASC,MAPN,kCAQWW,EAAQC,aAAaV,EAAUI,UAAW,CACzDnB,WATI,cAQNS,EARM,qDAaWe,EAAQK,UAAUR,EAAOE,WAAY,CAAEvB,WAblD,QAaNS,EAbM,8CAgBJT,EAAS,CACbsH,MAAOH,GAjBC,UAmBO3F,EAAQS,OAAOK,EAAM1B,SAAU,CAAEZ,WAnBxC,QAmBVS,EAnBU,eAsBZiG,EAASjG,EAASwD,SAClBiD,EAAazG,EAAS8G,aAvBV,kDAyBZ9B,QAAQC,IAAR,MAzBY,0DAAH,qDA4BbiB,KACC,CAACrE,EAAM1B,SAAUuG,IAEpB,IAAMK,EAAQ,uCAAG,gCAAAjH,EAAA,kEAETE,EAAW,UAEC4G,IAAZF,EAJS,iBAKLnH,EAAS,CACbuF,KAAMA,EAAO,GANJ,KAQHjD,EAAM1B,SARH,cASJA,EAASC,MATL,kCAUUW,EAAQC,aAAaV,EAAUI,UAAW,CACzDnB,WAXK,cAUPS,EAVO,qDAeUe,EAAQK,UAAUR,EAAOE,WAAY,CAAEvB,WAfjD,QAePS,EAfO,8CAkBLT,EAAS,CACbuF,KAAMA,EAAO,EACb+B,MAAOH,GApBE,UAsBM3F,EAAQS,OAAOK,EAAM1B,SAAU,CAAEZ,WAtBvC,QAsBXS,EAtBW,eAyBbiG,EAAS,GAAD,mBAAKD,GAAL,YAAehG,EAASwD,WAChC+C,EAAQzB,EAAO,GA1BF,kDA4BbE,QAAQC,IAAR,MA5Ba,0DAAH,qDAgCd,OACE,qCACE,qBAAK1G,UAAU,aAAf,SACGyH,EAAMT,KAAI,SAAC3C,EAAM4C,GAAP,OACT,cAAC,EAAD,CAAuBrF,SAAU0B,EAAM1B,SAAUyC,KAAMA,GAAvC4C,QAInBV,EAAO0B,EACN,qBAAKjI,UAAU,uBAAf,SACE,cAAC,EAAD,CAAeA,UAAU,QAAQC,QAASuI,EAA1C,4BAIA,UCnEKC,EApBC,WAAO,IACb7G,EAAawG,cAAbxG,SAIR,OAFA6E,QAAQC,IAAI9E,GAGV,qCACE,cAAC,EAAD,UACGA,IAAamB,EAAKlB,MAAQ,SAAW,cAGxC,qBAAK7B,UAAU,YAAf,SACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAW4B,SAAUA,YCiDhB8G,G,MA5DA,WACb,IAAM3C,EAAYvC,iBAAO,MADN,EAEM4E,cAAjBxG,EAFW,EAEXA,SAAUoB,EAFC,EAEDA,GAFC,EAIKgB,mBAAS,MAJd,mBAIZK,EAJY,KAINsE,EAJM,OAKO3E,mBAAS,MALhB,mBAKZ4E,EALY,KAKLC,EALK,KAgCnB,OAzBA1E,qBAAU,YACO,uCAAG,8BAAA5C,EAAA,sEAERP,EAAS,GAFD,SAGSwB,EAAQU,OAAOtB,EAAUoB,EAAI,CAAEhC,WAHxC,OAGRS,EAHQ,OAIdkH,EAAQlH,GACRqH,OAAOC,SAAS,EAAG,GALL,gDAOdtC,QAAQC,IAAR,MAPc,yDAAH,qDAUfsC,KACC,CAACpH,EAAUoB,IAEdmB,qBAAU,YACM,uCAAG,4BAAA5C,EAAA,sEACQZ,IAAMiC,IAAN,oDACwBI,IAFhC,OACTvB,EADS,OAIfgF,QAAQC,IAAIjF,GACZoH,EAASpH,GALM,2CAAH,qDAOdwH,KACC,CAACjG,IAGF,mCACGqB,GACC,qCACE,qBACErE,UAAU,SACVwF,MAAO,CACLC,gBAAgB,OAAD,OAASrF,EAAUG,cAChC8D,EAAKI,eAAiBJ,EAAKK,aADd,QAMnB,qBAAK1E,UAAU,gBAAf,SACE,wBACE4F,IAAKgD,EACLnF,IAAKsC,EACLC,MAAM,OACNC,OAAO,QACPP,MAAM,qBC3CLwD,EAXG,WAChB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,6BAA6BC,QAAS,cAAC,EAAD,MAClD,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAOD,KAAK,iBAAiBC,QAAS,cAAC,EAAD,MACtC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,UCShBC,G,MAfA,WACb,OACE,qBAAKrJ,UAAU,SAASwF,MAAO,CAAEC,gBAAgB,OAAD,OAAS4B,EAAT,MAAhD,SACE,qBAAKrH,UAAU,4BAAf,SACE,qBAAKA,UAAU,eAAf,SACE,qBAAKA,UAAU,eAAf,SAEE,gECbG,G,MAAA,IAA0B,oCCMnCsJ,EAAY,CAChB,CACEC,QAAS,OACTJ,KAAM,KAER,CACEI,QAAS,SACTJ,KAAM,UAER,CACEI,QAAS,YACTJ,KAAM,QAgDKK,EA5CA,WAAO,IACZC,EAAaC,cAAbD,SACFE,EAAYnG,iBAAO,MAEzBW,qBAAU,WACR,IAAMyF,EAAe,WAEjB9E,SAAS+E,KAAKC,UAAY,KAC1BhF,SAASiF,gBAAgBD,UAAY,IAErCH,EAAUjG,QAAQE,UAAUoG,IAAI,UAEhCL,EAAUjG,QAAQE,UAAUC,OAAO,WAKvC,OAFAiF,OAAOmB,iBAAiB,SAAUL,GAE3B,WACLd,OAAOoB,oBAAoB,SAAUN,MAEtC,IAEH,IAAM3F,EAASqF,EAAUa,WAAU,SAACC,GAAD,OAAOA,EAAEjB,OAASM,KAErD,OACE,qBAAKzJ,UAAU,SAASyD,IAAKkG,EAA7B,SACE,sBAAK3J,UAAU,4BAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAK4F,IAAKyE,EAAMxE,IAAI,SACpB,cAAC,IAAD,CAAMyB,GAAG,IAAT,sBAGF,oBAAItH,UAAU,cAAd,SACGsJ,EAAUtC,KAAI,SAAC3C,EAAM4C,GAAP,OACb,oBAAgBjH,UAAS,UAAKiH,IAAUhD,EAAS,SAAW,IAA5D,SACE,cAAC,IAAD,CAAMqD,GAAIjD,EAAK8E,KAAf,SAAsB9E,EAAKkF,WADpBtC,cChCNqD,G,MAZH,WACV,OACE,mCACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,WCZRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3F,SAAS4F,eAAe,W","file":"static/js/main.d69dffb1.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\nimport './button.scss'\r\n\r\nconst Button = ({ className, onClick, children }) => {\r\n  return (\r\n    <button\r\n      className={`btn ${className}`}\r\n      onClick={onClick ? () => onClick() : null}\r\n    >\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport const OutlineButton = ({ className, onClick, children }) => {\r\n  return (\r\n    <button\r\n      className={`btn btn-outline ${className}`}\r\n      onClick={onClick ? () => onClick() : null}\r\n    >\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","const apiConfig = {\r\n  baseUrl: 'https://api.themoviedb.org/3/',\r\n  apiKey: '9594009f1f1eaa2569cac95221461142',\r\n  originalImage: (imgPath) => `https://image.tmdb.org/t/p/original/${imgPath}`,\r\n  w500Image: (imgPath) => `https://image.tmdb.org/t/p/w500/${imgPath}`,\r\n}\r\n\r\nexport default apiConfig\r\n","import axios from 'axios'\r\nimport queryString from 'query-string'\r\n\r\nimport apiConfig from './apiConfig'\r\n\r\nconst axiosClient = axios.create({\r\n  baseURL: apiConfig.baseUrl,\r\n  headers: { 'Content-Type': 'application/json' },\r\n  paramsSerializer: (params) =>\r\n    queryString.stringify({ ...params, api_key: apiConfig.apiKey }),\r\n})\r\n\r\naxiosClient.interceptors.request.use(async (config) => config)\r\n\r\naxiosClient.interceptors.response.use(\r\n  (response) => {\r\n    if (response && response.data) {\r\n      return response.data\r\n    }\r\n    return response\r\n  },\r\n  (error) => {\r\n    throw error\r\n  }\r\n)\r\n\r\nexport default axiosClient\r\n","import axiosClient from './axiosClient'\r\n\r\nexport const category = {\r\n  movie: 'movie',\r\n  tv: 'tv',\r\n}\r\n\r\nexport const movieType = {\r\n  latest: 'latest',\r\n  now_playing: 'now_playing',\r\n  popular: 'popular',\r\n  top_rated: 'top_rated',\r\n  up_coming: 'up_coming',\r\n}\r\n\r\nexport const tvType = {\r\n  latest: 'latest',\r\n  airing_today: 'airing_today',\r\n  on_the_air: 'on_the_air',\r\n  top_rated: 'top_rated',\r\n  up_coming: 'up_coming',\r\n}\r\n\r\nconst tmdbApi = {\r\n  getMovieList: (type, params) => {\r\n    const url = `${category.movie}/${movieType[type]}`\r\n    return axiosClient.get(url, params)\r\n  },\r\n  getTvList: (type, params) => {\r\n    const url = `${category.tv}/${tvType[type]}`\r\n    return axiosClient.get(url, params)\r\n  },\r\n  getVideos: (cate, id) => {\r\n    const url = `${category[cate]}/${id}/videos`\r\n    return axiosClient.get(url, { params: {} })\r\n  },\r\n  search: (cate, params) => {\r\n    const url = `search/${category[cate]}`\r\n    return axiosClient.get(url, params)\r\n  },\r\n  detail: (cate, id) => {\r\n    const url = `${category[cate]}/${id}`\r\n    return axiosClient.get(url, { params: {} })\r\n  },\r\n  credits: (cate, id) => {\r\n    const url = `${category[cate]}/${id}/credits`\r\n    return axiosClient.get(url, { params: {} })\r\n  },\r\n  similar: (cate, id) => {\r\n    const url = `${category[cate]}/${id}/similar`\r\n    return axiosClient.get(url, { params: {} })\r\n  },\r\n}\r\n\r\nexport default tmdbApi\r\n","import { useState, useEffect, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './modal.scss'\r\n\r\nconst Modal = (props) => {\r\n  const [active, setActive] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setActive(props.active)\r\n  }, [props.active])\r\n\r\n  return (\r\n    <div id={props.id} className={`modal ${active ? 'active' : ''}`}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const ModalContent = (props) => {\r\n  const modalContentRef = useRef(null)\r\n\r\n  const closeModal = () => {\r\n    modalContentRef.current.parentNode.classList.remove('active')\r\n    if (props.onClose) props.onClose()\r\n  }\r\n\r\n  return (\r\n    <div ref={modalContentRef} className=\"modal__content\">\r\n      {props.children}\r\n      <div className=\"modal__close\" onClick={closeModal}>\r\n        <i className=\"bx bx-x\"></i>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nModal.propTypes = {\r\n  active: PropTypes.bool,\r\n  id: PropTypes.string,\r\n}\r\n\r\nexport default Modal\r\n","import { useState, useEffect, useRef } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport SwiperCore, { Autoplay } from 'swiper'\r\nimport { Swiper, SwiperSlide } from 'swiper/react'\r\n\r\nimport './hero-slide.scss'\r\n\r\nimport apiConfig from '../../api/apiConfig'\r\nimport tmdbApi, { category, movieType } from '../../api/tmdbApi'\r\nimport Button, { OutlineButton } from '../button/Button'\r\nimport Modal, { ModalContent } from '../modal/Modal'\r\n\r\nconst HeroSlide = () => {\r\n  SwiperCore.use([Autoplay])\r\n\r\n  const [movieItems, setMovieItems] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getMovies = async () => {\r\n      const params = { page: 1 }\r\n      try {\r\n        const response = await tmdbApi.getMovieList(movieType.popular, {\r\n          params,\r\n        })\r\n        const data = response.results.slice(0, 3)\r\n        // console.log(data)\r\n        setMovieItems(data)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n    getMovies()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"slide\">\r\n      <Swiper\r\n        modules={[Autoplay]}\r\n        spaceBetween={0}\r\n        slidesPerView={1}\r\n        grabCursor={true}\r\n        // autoplay={{ delay: 3000 }}\r\n      >\r\n        {movieItems.map((item, index) => (\r\n          <SwiperSlide key={index}>\r\n            {({ isActive }) => (\r\n              <HeroSlideItem\r\n                item={item}\r\n                className={`${isActive ? 'active' : ''}`}\r\n              />\r\n            )}\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n      {movieItems.map((item, index) => (\r\n        <TrailerModal key={index} item={item} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst HeroSlideItem = ({ item, className }) => {\r\n  let navigate = useNavigate()\r\n  const backgroundUrl = apiConfig.originalImage(\r\n    item.backdrop_path ? item.backdrop_path : item.poster_path\r\n  )\r\n\r\n  const posterUrl = apiConfig.w500Image(item.poster_path)\r\n\r\n  const setModalActive = async () => {\r\n    const modal = document.querySelector(`#modal_${item.id}`)\r\n\r\n    const videos = await tmdbApi.getVideos(category.movie, item.id)\r\n\r\n    if (videos.results.length > 0) {\r\n      const trailerUrl =\r\n        'https://www.youtube.com/embed/' + videos.results[0].key\r\n      modal\r\n        .querySelector('.modal__content > iframe')\r\n        .setAttribute('src', trailerUrl)\r\n    } else {\r\n      modal.querySelector('.modal__content').innerHTML = 'No trailer'\r\n    }\r\n\r\n    modal.classList.toggle('active')\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`slide__item ${className}`}\r\n      style={{ backgroundImage: `url(${backgroundUrl})` }}\r\n    >\r\n      <div className=\"slide__content\">\r\n        <div className=\"slide__info\">\r\n          <h2 className=\"slide__title\">{item.title}</h2>\r\n          <div className=\"slide__overview\">{item.overview}</div>\r\n          <div className=\"slide__buttons\">\r\n            <Button onClick={() => navigate(`/movie/${item.id}`)}>\r\n              Watch Now\r\n            </Button>\r\n            <OutlineButton onClick={setModalActive}>\r\n              Watch Trailer\r\n            </OutlineButton>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"slide__poster\">\r\n          <img src={posterUrl} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst TrailerModal = ({ item }) => {\r\n  const iframeRef = useRef(null)\r\n\r\n  const onClose = () => iframeRef.current.setAttribute('src', '')\r\n  return (\r\n    <Modal active={false} id={`modal_${item.id}`}>\r\n      <ModalContent onClose={onClose}>\r\n        <iframe\r\n          ref={iframeRef}\r\n          width=\"100%\"\r\n          height=\"500px\"\r\n          title=\"trailer\"\r\n        ></iframe>\r\n      </ModalContent>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default HeroSlide\r\n","import './movie-card.scss'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport apiConfig from '../../api/apiConfig'\r\n\r\nimport { category } from '../../api/tmdbApi'\r\nimport Button from '../button/Button'\r\n\r\nconst MovieCard = (props) => {\r\n  const item = props.item\r\n\r\n  const link = `/${category[props.category]}/${item.id}`\r\n\r\n  const bg = apiConfig.w500Image(item.poster_path || item.backdrop_path)\r\n\r\n  return (\r\n    <Link to={link}>\r\n      <div className=\"movie-card\" style={{ backgroundImage: `url(${bg})` }}>\r\n        <Button>\r\n          <i className=\"bx bx-play\"></i>\r\n        </Button>\r\n      </div>\r\n      <h3>{item.title || item.name}</h3>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default MovieCard\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './movie-list.scss'\r\n\r\nimport { SwiperSlide, Swiper } from 'swiper/react'\r\n\r\nimport tmdbApi, { category } from '../../api/tmdbApi'\r\n\r\nimport MovieCard from '../movie-card/MovieCard'\r\n\r\nconst MovieList = (props) => {\r\n  const [items, setItems] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getList = async () => {\r\n      let response = null\r\n      const params = {}\r\n\r\n      try {\r\n        if (props.type !== 'similar') {\r\n          switch (props.category) {\r\n            case category.movie:\r\n              response = await tmdbApi.getMovieList(props.type, { params })\r\n              break\r\n            default:\r\n              response = await tmdbApi.getTvList(props.type, { params })\r\n          }\r\n        } else {\r\n          response = await tmdbApi.similar(props.category, props.id)\r\n        }\r\n        setItems(response.results)\r\n        console.log(response.results)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n    getList()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"movie-list\">\r\n      <Swiper grabCursor={true} spaceBetween={10} slidesPerView={'auto'}>\r\n        {items.map((item, i) => (\r\n          <SwiperSlide key={i}>\r\n            <MovieCard item={item} category={props.category} />\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n    </div>\r\n  )\r\n}\r\n\r\nMovieList.propTypes = {\r\n  category: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default MovieList\r\n","import { Link } from 'react-router-dom'\r\nimport { OutlineButton } from '../components/button/Button'\r\nimport HeroSlide from '../components/hero-slide/HeroSlide'\r\nimport MovieList from '../components/movie-list/MovieList'\r\n\r\nimport { category, movieType, tvType } from '../api/tmdbApi'\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <HeroSlide />\r\n      <div className=\"container\">\r\n        <div className=\"section mb-3\">\r\n          <div className=\"section__header mb-2\">\r\n            <h2>Trending Movies</h2>\r\n            <Link to=\"/movie\">\r\n              <OutlineButton className=\"small\">View more</OutlineButton>\r\n            </Link>\r\n          </div>\r\n          <MovieList category={category.movie} type={movieType.popular} />\r\n        </div>\r\n\r\n        <div className=\"section mb-3\">\r\n          <div className=\"section__header mb-2\">\r\n            <h2>Top Rated Movies</h2>\r\n            <Link to=\"/movie\">\r\n              <OutlineButton className=\"small\">View more</OutlineButton>\r\n            </Link>\r\n          </div>\r\n          <MovieList category={category.movie} type={movieType.top_rated} />\r\n        </div>\r\n\r\n        <div className=\"section mb-3\">\r\n          <div className=\"section__header mb-2\">\r\n            <h2>On The Air TV</h2>\r\n            <Link to=\"/movie\">\r\n              <OutlineButton className=\"small\">View more</OutlineButton>\r\n            </Link>\r\n          </div>\r\n          <MovieList category={category.tv} type={tvType.on_the_air} />\r\n        </div>\r\n\r\n        <div className=\"section mb-3\">\r\n          <div className=\"section__header mb-2\">\r\n            <h2>Top Rated TV</h2>\r\n            <Link to=\"/movie\">\r\n              <OutlineButton className=\"small\">View more</OutlineButton>\r\n            </Link>\r\n          </div>\r\n          <MovieList category={category.tv} type={tvType.top_rated} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","export default __webpack_public_path__ + \"static/media/footer-bg.67e95f05.jpg\";","import './page-header.scss'\r\n\r\nimport bg from '../../assets/footer-bg.jpg'\r\n\r\nconst PageHeader = (props) => {\r\n  return (\r\n    <div className=\"page-header\" style={{ backgroundImage: `url(${bg})` }}>\r\n      <h2>{props.children}</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageHeader\r\n","import { useState, useEffect } from 'react'\r\nimport './movie-grid.scss'\r\n\r\nimport tmdbApi, { category, movieType, tvType } from '../../api/tmdbApi'\r\nimport apiConfig from '../../api/apiConfig'\r\n\r\nimport MovieCard from '../movie-card/MovieCard'\r\nimport { useParams } from 'react-router-dom'\r\nimport { OutlineButton } from '../button/Button'\r\n\r\nconst MovieGrid = (props) => {\r\n  const [items, setItems] = useState([])\r\n  const [page, setPage] = useState(1)\r\n  const [totalPage, setTotalPage] = useState(0)\r\n\r\n  const { keyword } = useParams()\r\n  useEffect(() => {\r\n    const getList = async () => {\r\n      try {\r\n        let response = null\r\n\r\n        if (keyword === undefined) {\r\n          const params = {}\r\n          switch (props.category) {\r\n            case category.movie:\r\n              response = await tmdbApi.getMovieList(movieType.top_rated, {\r\n                params,\r\n              })\r\n              break\r\n            default:\r\n              response = await tmdbApi.getTvList(tvType.on_the_air, { params })\r\n          }\r\n        } else {\r\n          const params = {\r\n            query: keyword,\r\n          }\r\n          response = await tmdbApi.search(props.category, { params })\r\n        }\r\n        // console.log(response.results)\r\n        setItems(response.results)\r\n        setTotalPage(response.total_pages)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n    getList()\r\n  }, [props.category, keyword])\r\n\r\n  const loadMore = async () => {\r\n    try {\r\n      let response = null\r\n\r\n      if (keyword === undefined) {\r\n        const params = {\r\n          page: page + 1,\r\n        }\r\n        switch (props.category) {\r\n          case category.movie:\r\n            response = await tmdbApi.getMovieList(movieType.top_rated, {\r\n              params,\r\n            })\r\n            break\r\n          default:\r\n            response = await tmdbApi.getTvList(tvType.on_the_air, { params })\r\n        }\r\n      } else {\r\n        const params = {\r\n          page: page + 1,\r\n          query: keyword,\r\n        }\r\n        response = await tmdbApi.search(props.category, { params })\r\n      }\r\n      // console.log(response.results)\r\n      setItems([...items, ...response.results])\r\n      setPage(page + 1)\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"movie-grid\">\r\n        {items.map((item, index) => (\r\n          <MovieCard key={index} category={props.category} item={item} />\r\n        ))}\r\n      </div>\r\n\r\n      {page < totalPage ? (\r\n        <div className=\"movie-grid__loadmore\">\r\n          <OutlineButton className=\"small\" onClick={loadMore}>\r\n            Load more...\r\n          </OutlineButton>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MovieGrid\r\n","import { useParams } from 'react-router-dom'\r\n\r\nimport PageHeader from '../components/page-header/PageHeader'\r\n\r\nimport { category as cate } from '../api/tmdbApi'\r\nimport MovieGrid from '../components/movie-grid/MovieGrid'\r\n\r\nconst Catalog = () => {\r\n  const { category } = useParams()\r\n\r\n  console.log(category)\r\n\r\n  return (\r\n    <>\r\n      <PageHeader>\r\n        {category === cate.movie ? 'Movies' : 'TV Series'}\r\n      </PageHeader>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"section mb-3\">\r\n          <MovieGrid category={category} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Catalog\r\n","import { useState, useEffect, useRef } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nimport './detail.scss'\r\n\r\nimport tmdbApi from '../../api/tmdbApi'\r\nimport apiConfig from '../../api/apiConfig'\r\n\r\nconst Detail = () => {\r\n  const iframeRef = useRef(null)\r\n  const { category, id } = useParams()\r\n\r\n  const [item, setItem] = useState(null)\r\n  const [video, setVideo] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const getDetail = async () => {\r\n      try {\r\n        const params = {}\r\n        const response = await tmdbApi.detail(category, id, { params })\r\n        setItem(response)\r\n        window.scrollTo(0, 0)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n    getDetail()\r\n  }, [category, id])\r\n\r\n  useEffect(() => {\r\n    const getMovie = async () => {\r\n      const response = await axios.get(\r\n        `https://www.2embed.ru/embed/tmdb/movie?id=${id}`\r\n      )\r\n      console.log(response)\r\n      setVideo(response)\r\n    }\r\n    getMovie()\r\n  }, [id])\r\n\r\n  return (\r\n    <>\r\n      {item && (\r\n        <>\r\n          <div\r\n            className=\"banner\"\r\n            style={{\r\n              backgroundImage: `url(${apiConfig.originalImage(\r\n                item.backdrop_path || item.poster_path\r\n              )})`,\r\n            }}\r\n          ></div>\r\n\r\n          <div className=\"movie-content\">\r\n            <iframe\r\n              src={video}\r\n              ref={iframeRef}\r\n              width=\"100%\"\r\n              height=\"500px\"\r\n              title=\"trailer\"\r\n            ></iframe>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Detail\r\n","import { Routes, Route } from 'react-router-dom'\r\n\r\nimport Home from '../pages/Home'\r\nimport Catalog from '../pages/Catalog'\r\nimport Detail from '../pages/detail/Detail'\r\n\r\nconst AppRoutes = () => {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/:category/search/:keyword\" element={<Catalog />} />\r\n      <Route path=\"/:category\" element={<Catalog />} />\r\n      <Route path=\"/:category/:id\" element={<Detail />} />\r\n      <Route path=\"/\" element={<Home />} />\r\n    </Routes>\r\n  )\r\n}\r\n\r\nexport default AppRoutes\r\n","import './footer.scss'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport bg from '../../assets/footer-bg.jpg'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\" style={{ backgroundImage: `url(${bg})` }}>\r\n      <div className=\"container footer__content\">\r\n        <div className=\"footer__menu\">\r\n          <div className=\"footer__item\">\r\n            {/* <Link to=\"/\">From iamtd with love.</Link> */}\r\n            <span>From td with love.</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","export default __webpack_public_path__ + \"static/media/tmovie.67797e94.png\";","import { useEffect, useRef } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\nimport './header.scss'\r\nimport logo from '../../assets/tmovie.png'\r\n\r\nconst headerNav = [\r\n  {\r\n    display: 'Home',\r\n    path: '/',\r\n  },\r\n  {\r\n    display: 'Movies',\r\n    path: '/movie',\r\n  },\r\n  {\r\n    display: 'TV Series',\r\n    path: '/tv',\r\n  },\r\n]\r\n\r\nconst Header = () => {\r\n  const { pathname } = useLocation()\r\n  const headerRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    const shrinkHeader = () => {\r\n      if (\r\n        document.body.scrollTop > 100 ||\r\n        document.documentElement.scrollTop > 100\r\n      ) {\r\n        headerRef.current.classList.add('shrink')\r\n      } else {\r\n        headerRef.current.classList.remove('shrink')\r\n      }\r\n    }\r\n    window.addEventListener('scroll', shrinkHeader)\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', shrinkHeader)\r\n    }\r\n  }, [])\r\n\r\n  const active = headerNav.findIndex((e) => e.path === pathname)\r\n\r\n  return (\r\n    <div className=\"header\" ref={headerRef}>\r\n      <div className=\"container header__wrapper\">\r\n        <div className=\"header__logo\">\r\n          <img src={logo} alt=\"logo\" />\r\n          <Link to=\"/\">td.pt</Link>\r\n        </div>\r\n\r\n        <ul className=\"header__nav\">\r\n          {headerNav.map((item, index) => (\r\n            <li key={index} className={`${index === active ? 'active' : ''}`}>\r\n              <Link to={item.path}>{item.display}</Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import 'swiper/swiper.min.css'\nimport './assets/boxicons-2.0.7/css/boxicons.min.css'\n\nimport { BrowserRouter } from 'react-router-dom'\n\nimport AppRoutes from './config/AppRoutes'\nimport Footer from './components/footer/Footer'\nimport Header from './components/header/Header'\n\nimport './App.scss'\n\nconst App = () => {\n  return (\n    <>\n      <BrowserRouter>\n        <Header />\n        <AppRoutes />\n        <Footer />\n      </BrowserRouter>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}